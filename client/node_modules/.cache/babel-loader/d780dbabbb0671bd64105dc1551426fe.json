{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web_Dev\\\\contxtassignment\\\\src\\\\components\\\\Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { RecordWebcam, useRecordWebcam, CAMERA_STATUS } from \"react-record-webcam\";\nimport \"./Dashboard.css\";\nimport Button from \"./UI/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPTIONS = {\n  filename: \"test-filename\",\n  fileType: \"mp4\",\n  width: 1920,\n  height: 1080\n};\nexport const App = () => {\n  _s();\n\n  const recordWebcam = useRecordWebcam(OPTIONS);\n\n  const getRecordingFileHooks = async () => {\n    const blob = await recordWebcam.getRecording();\n    console.log({\n      blob\n    });\n  };\n\n  const getRecordingFileRenderProp = async blob => {\n    console.log({\n      blob\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(RecordWebcam, {\n        options: OPTIONS,\n        render: props => {\n          const showOpenCamera = props.status !== CAMERA_STATUS.OPEN && props.status !== CAMERA_STATUS.RECORDING && props.status !== CAMERA_STATUS.PREVIEW;\n          const showCloseCamera = props.status === CAMERA_STATUS.OPEN || CAMERA_STATUS.RECORDING;\n          const showStart = props.status === CAMERA_STATUS.OPEN;\n          const showStop = props.status === CAMERA_STATUS.RECORDING;\n          const showRetake = props.status === CAMERA_STATUS.PREVIEW;\n          const showDownload = props.status === CAMERA_STATUS.PREVIEW;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Component render prop demo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Camera status: \", props.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: !showOpenCamera,\n                onClick: props.openCamera,\n                children: \"Open camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: showOpenCamera || showRetake || !showCloseCamera,\n                onClick: props.closeCamera,\n                children: \"Close camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !showStart,\n                onClick: props.start,\n                children: \"Start recording\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !showStop,\n                onClick: props.stop,\n                children: \"Stop recording\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !showRetake,\n                onClick: props.retake,\n                children: \"Retake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !showDownload,\n                onClick: props.download,\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: !showDownload,\n                onClick: async () => {\n                  const blob = await props.getRecording();\n                  getRecordingFileRenderProp(blob);\n                },\n                children: \"Get recording blob\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JuaOJdIUn+rmNv0fglIXkT5iE9U=\", false, function () {\n  return [useRecordWebcam];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Web_Dev/contxtassignment/src/components/Dashboard.tsx"],"names":["React","RecordWebcam","useRecordWebcam","CAMERA_STATUS","Button","OPTIONS","filename","fileType","width","height","App","recordWebcam","getRecordingFileHooks","blob","getRecording","console","log","getRecordingFileRenderProp","props","showOpenCamera","status","OPEN","RECORDING","PREVIEW","showCloseCamera","showStart","showStop","showRetake","showDownload","openCamera","closeCamera","start","stop","retake","download"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { RecordWebcam, useRecordWebcam, CAMERA_STATUS} from \"react-record-webcam\";\r\nimport type { WebcamRenderProps, RecordWebcamOptions, RecordWebcamHook} from \"react-record-webcam\";\r\nimport \"./Dashboard.css\";\r\nimport Button from \"./UI/Button\";\r\n\r\nconst OPTIONS: RecordWebcamOptions = {\r\n  filename: \"test-filename\",\r\n  fileType: \"mp4\",\r\n  width: 1920,\r\n  height: 1080\r\n};\r\n\r\nexport const App = () => {\r\n  const recordWebcam: RecordWebcamHook = useRecordWebcam(OPTIONS);\r\n\r\n  const getRecordingFileHooks = async () => {\r\n    const blob = await recordWebcam.getRecording();\r\n    console.log({ blob });\r\n  };\r\n\r\n  const getRecordingFileRenderProp = async (blob: Blob | undefined) => {\r\n    console.log({ blob });\r\n  };\r\n\r\n  return (\r\n    <div> \r\n      <div className=\"card\">\r\n        <RecordWebcam\r\n          options={OPTIONS}\r\n          render={(props: WebcamRenderProps) => {\r\n            const showOpenCamera =\r\n              props.status !== CAMERA_STATUS.OPEN &&\r\n              props.status !== CAMERA_STATUS.RECORDING &&\r\n              props.status !== CAMERA_STATUS.PREVIEW;\r\n            const showCloseCamera =\r\n              props.status === CAMERA_STATUS.OPEN || CAMERA_STATUS.RECORDING;\r\n            const showStart = props.status === CAMERA_STATUS.OPEN;\r\n            const showStop = props.status === CAMERA_STATUS.RECORDING;\r\n            const showRetake = props.status === CAMERA_STATUS.PREVIEW;\r\n            const showDownload = props.status === CAMERA_STATUS.PREVIEW;\r\n\r\n            return (\r\n              <div>\r\n                <h1>Component render prop demo</h1>\r\n                <p>Camera status: {props.status}</p>\r\n                <div>\r\n                  <Button disabled={!showOpenCamera} onClick={props.openCamera}>\r\n                    Open camera\r\n                  </Button>\r\n                  <Button\r\n                    disabled={showOpenCamera || showRetake || !showCloseCamera}\r\n                    onClick={props.closeCamera}\r\n                  >\r\n                    Close camera\r\n                  </Button>\r\n\r\n                  <Button disabled={!showStart} onClick={props.start}>\r\n                    Start recording\r\n                  </Button>\r\n                  <Button disabled={!showStop} onClick={props.stop}>\r\n                    Stop recording\r\n                  </Button>\r\n                  <Button disabled={!showRetake} onClick={props.retake}>\r\n                    Retake\r\n                  </Button>\r\n                  <Button disabled={!showDownload} onClick={props.download}>\r\n                    Download\r\n                  </Button>\r\n                  <Button\r\n                    disabled={!showDownload}\r\n                    onClick={async () => {\r\n                      const blob = await props.getRecording();\r\n                      getRecordingFileRenderProp(blob);\r\n                    }}\r\n                  >\r\n                    Get recording blob\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}